GPUExists        function     88 ../GPU/QuEST_env_localGPU.cpp int GPUExists(void){
QuESTAssert      function   1442 ../GPU/QuEST_env_localGPU.cpp void QuESTAssert(int isValid, int errorCode, const char* func){
calcTotalProbability function    394 ../GPU/QuEST_env_localGPU.cpp REAL calcTotalProbability(MultiQubit multiQubit){
closeQuESTEnv    function    125 ../GPU/QuEST_env_localGPU.cpp void closeQuESTEnv(QuESTEnv env){
collapseToOutcome function   1326 ../GPU/QuEST_env_localGPU.cpp REAL collapseToOutcome(MultiQubit multiQubit, const int measureQubit, int outcome)
collapseToOutcomeKernel function   1265 ../GPU/QuEST_env_localGPU.cpp __global__ void collapseToOutcomeKernel(MultiQubit multiQubit, int measureQubit, REAL totalProbability, int outcome)
compactUnitary   function    485 ../GPU/QuEST_env_localGPU.cpp void compactUnitary(MultiQubit multiQubit, const int targetQubit, Complex alpha, Complex beta) 
compactUnitaryKernel function    430 ../GPU/QuEST_env_localGPU.cpp __global__ void compactUnitaryKernel (MultiQubit multiQubit, const int rotQubit, Complex alpha, Complex beta){
compareStates    function    375 ../GPU/QuEST_env_localGPU.cpp int compareStates(MultiQubit mq1, MultiQubit mq2, REAL precision){
controlledCompactUnitary function    554 ../GPU/QuEST_env_localGPU.cpp void controlledCompactUnitary(MultiQubit multiQubit, const int controlQubit, const int targetQubit, Complex alpha, Complex beta) 
controlledCompactUnitaryKernel function    495 ../GPU/QuEST_env_localGPU.cpp __global__ void controlledCompactUnitaryKernel (MultiQubit multiQubit, const int controlQubit, const int targetQubit, Complex alpha, Complex beta){
controlledNot    function   1104 ../GPU/QuEST_env_localGPU.cpp void controlledNot(MultiQubit multiQubit, const int controlQubit, const int targetQubit)
controlledNotKernel function   1065 ../GPU/QuEST_env_localGPU.cpp __global__ void controlledNotKernel(MultiQubit multiQubit, const int controlQubit, const int targetQubit)
controlledPhaseGate function    963 ../GPU/QuEST_env_localGPU.cpp void controlledPhaseGate(MultiQubit multiQubit, const int idQubit1, const int idQubit2)
controlledPhaseGateKernel function    942 ../GPU/QuEST_env_localGPU.cpp __global__ void controlledPhaseGateKernel(MultiQubit multiQubit, const int idQubit1, const int idQubit2)
controlledUnitary function    688 ../GPU/QuEST_env_localGPU.cpp void controlledUnitary(MultiQubit multiQubit, const int controlQubit, const int targetQubit, ComplexMatrix2 u)
controlledUnitaryKernel function    630 ../GPU/QuEST_env_localGPU.cpp __global__ void controlledUnitaryKernel(MultiQubit multiQubit, const int controlQubit, const int targetQubit, ComplexMatrix2 u){
copySharedReduceBlock function   1142 ../GPU/QuEST_env_localGPU.cpp __global__ void copySharedReduceBlock(REAL*arrayIn, REAL *reducedArray, int length){
copyStateFromGPU function    159 ../GPU/QuEST_env_localGPU.cpp void copyStateFromGPU(MultiQubit multiQubit)
copyStateToGPU   function    145 ../GPU/QuEST_env_localGPU.cpp void copyStateToGPU(MultiQubit multiQubit)
createMultiQubit function     28 ../GPU/QuEST_env_localGPU.cpp void createMultiQubit(MultiQubit *multiQubit, int numQubits, QuESTEnv env)
destroyMultiQubit function     73 ../GPU/QuEST_env_localGPU.cpp void destroyMultiQubit(MultiQubit multiQubit, QuESTEnv env)
exitWithError    function   1434 ../GPU/QuEST_env_localGPU.cpp void exitWithError(int errorCode, const char* func){
extractBit       function     19 ../GPU/QuEST_env_localGPU.cpp static __device__ int extractBit (int locationOfBitFromRight, long long int theEncodedNumber)
findProbabilityOfOutcome function   1256 ../GPU/QuEST_env_localGPU.cpp REAL findProbabilityOfOutcome(MultiQubit multiQubit, const int measureQubit, int outcome)
findProbabilityOfZero function   1217 ../GPU/QuEST_env_localGPU.cpp REAL findProbabilityOfZero(MultiQubit multiQubit,
findProbabilityOfZeroKernel function   1151 ../GPU/QuEST_env_localGPU.cpp __global__ void findProbabilityOfZeroKernel(MultiQubit multiQubit,
getEnvironmentString function    141 ../GPU/QuEST_env_localGPU.cpp void getEnvironmentString(QuESTEnv env, MultiQubit multiQubit, char str[200]){
getImagAmpEl     function    206 ../GPU/QuEST_env_localGPU.cpp REAL getImagAmpEl(MultiQubit multiQubit, long long int index){
getNumReductionLevels function   1201 ../GPU/QuEST_env_localGPU.cpp int getNumReductionLevels(long long int numValuesToReduce, int numReducedPerLevel){
getRealAmpEl     function    199 ../GPU/QuEST_env_localGPU.cpp REAL getRealAmpEl(MultiQubit multiQubit, long long int index){
hadamard         function   1056 ../GPU/QuEST_env_localGPU.cpp void hadamard(MultiQubit multiQubit, const int targetQubit) 
hadamardKernel   function   1007 ../GPU/QuEST_env_localGPU.cpp __global__ void hadamardKernel (MultiQubit multiQubit, const int targetQubit){
initClassicalState function    278 ../GPU/QuEST_env_localGPU.cpp void initClassicalState(MultiQubit multiQubit, long long int stateInd)
initClassicalStateKernel function    263 ../GPU/QuEST_env_localGPU.cpp void __global__ initClassicalStateKernel(long long int stateVecSize, REAL *stateVecReal, REAL *stateVecImag, long long int stateInd){
initQuESTEnv     function    105 ../GPU/QuEST_env_localGPU.cpp void initQuESTEnv(QuESTEnv *env){
initStateDebug   function    299 ../GPU/QuEST_env_localGPU.cpp void initStateDebug(MultiQubit multiQubit)
initStateDebugKernel function    289 ../GPU/QuEST_env_localGPU.cpp void __global__ initStateDebugKernel(long long int stateVecSize, REAL *stateVecReal, REAL *stateVecImag){
initStateOfSingleQubit function    328 ../GPU/QuEST_env_localGPU.cpp void initStateOfSingleQubit(MultiQubit *multiQubit, int qubitId, int outcome)
initStateOfSingleQubitKernel function    310 ../GPU/QuEST_env_localGPU.cpp void __global__ initStateOfSingleQubitKernel(long long int stateVecSize, REAL *stateVecReal, REAL *stateVecImag, int qubitId, int outcome){
initStatePlus    function    251 ../GPU/QuEST_env_localGPU.cpp void initStatePlus(MultiQubit multiQubit)
initStatePlusKernel function    240 ../GPU/QuEST_env_localGPU.cpp void __global__ initStatePlusKernel(long long int stateVecSize, REAL *stateVecReal, REAL *stateVecImag){
initStateZero    function    229 ../GPU/QuEST_env_localGPU.cpp void initStateZero(MultiQubit multiQubit)
initStateZeroKernel function    213 ../GPU/QuEST_env_localGPU.cpp void __global__ initStateZeroKernel(long long int stateVecSize, REAL *stateVecReal, REAL *stateVecImag){
initializeStateFromSingleFile function    336 ../GPU/QuEST_env_localGPU.cpp void initializeStateFromSingleFile(MultiQubit *multiQubit, char filename[200], QuESTEnv env){
log2Int          function   1116 ../GPU/QuEST_env_localGPU.cpp __device__ __host__ unsigned int log2Int( unsigned int x )
measure          function   1400 ../GPU/QuEST_env_localGPU.cpp int measure(MultiQubit multiQubit, int measureQubit){
measureInZero    function   1388 ../GPU/QuEST_env_localGPU.cpp REAL measureInZero(MultiQubit multiQubit, const int measureQubit)
measureInZeroKernel function   1341 ../GPU/QuEST_env_localGPU.cpp __global__ void measureInZeroKernel(MultiQubit multiQubit, int measureQubit, REAL totalProbability)
measureWithStats function   1406 ../GPU/QuEST_env_localGPU.cpp int measureWithStats(MultiQubit multiQubit, int measureQubit, REAL *stateProb){
multiControlledPhaseGate function    993 ../GPU/QuEST_env_localGPU.cpp void multiControlledPhaseGate(MultiQubit multiQubit, int *controlQubits, int numControlQubits)
multiControlledPhaseGateKernel function    975 ../GPU/QuEST_env_localGPU.cpp __global__ void multiControlledPhaseGateKernel(MultiQubit multiQubit, long long int mask)
multiControlledUnitary function    757 ../GPU/QuEST_env_localGPU.cpp void multiControlledUnitary(MultiQubit multiQubit, int *controlQubits, int numControlQubits, const int targetQubit, ComplexMatrix2 u)
multiControlledUnitaryKernel function    701 ../GPU/QuEST_env_localGPU.cpp __global__ void multiControlledUnitaryKernel(MultiQubit multiQubit, long long int mask, const int targetQubit, ComplexMatrix2 u){
phaseGate        function    933 ../GPU/QuEST_env_localGPU.cpp void phaseGate(MultiQubit multiQubit, const int targetQubit, enum phaseGateType type) 
phaseGateKernel  function    880 ../GPU/QuEST_env_localGPU.cpp __global__ void phaseGateKernel(MultiQubit multiQubit, const int targetQubit, enum phaseGateType type){
reduceBlock      function   1123 ../GPU/QuEST_env_localGPU.cpp __device__ void reduceBlock(REAL *arrayIn, REAL *reducedArray, int length){
reportQuESTEnv   function    129 ../GPU/QuEST_env_localGPU.cpp void reportQuESTEnv(QuESTEnv env){
reportStateToScreen function    173 ../GPU/QuEST_env_localGPU.cpp void reportStateToScreen(MultiQubit multiQubit, QuESTEnv env, int reportRank){
sigmaX           function    817 ../GPU/QuEST_env_localGPU.cpp void sigmaX(MultiQubit multiQubit, const int targetQubit) 
sigmaXKernel     function    773 ../GPU/QuEST_env_localGPU.cpp __global__ void sigmaXKernel(MultiQubit multiQubit, const int targetQubit){
sigmaY           function    871 ../GPU/QuEST_env_localGPU.cpp void sigmaY(MultiQubit multiQubit, const int targetQubit) 
sigmaYKernel     function    827 ../GPU/QuEST_env_localGPU.cpp __global__ void sigmaYKernel(MultiQubit multiQubit, const int targetQubit){
swapDouble       function   1210 ../GPU/QuEST_env_localGPU.cpp void swapDouble(REAL **a, REAL **b){
syncQuESTEnv     function    117 ../GPU/QuEST_env_localGPU.cpp void syncQuESTEnv(QuESTEnv env){
syncQuESTSuccess function    121 ../GPU/QuEST_env_localGPU.cpp int syncQuESTSuccess(int successCode){
unitary          function    620 ../GPU/QuEST_env_localGPU.cpp void unitary(MultiQubit multiQubit, const int targetQubit, ComplexMatrix2 u)
unitaryKernel    function    567 ../GPU/QuEST_env_localGPU.cpp __global__ void unitaryKernel(MultiQubit multiQubit, const int targetQubit, ComplexMatrix2 u){
