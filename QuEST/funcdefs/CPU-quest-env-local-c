QuESTAssert      function    240 ../CPU/QuEST_env_local.c void QuESTAssert(int isValid, int errorCode, const char* func){
calcTotalProbability function     60 ../CPU/QuEST_env_local.c REAL calcTotalProbability(MultiQubit multiQubit){
closeQuESTEnv    function     39 ../CPU/QuEST_env_local.c void closeQuESTEnv(QuESTEnv env){
collapseToOutcome function    192 ../CPU/QuEST_env_local.c REAL collapseToOutcome(MultiQubit multiQubit, const int measureQubit, int outcome)
compactUnitary   function     98 ../CPU/QuEST_env_local.c void compactUnitary(MultiQubit multiQubit, const int targetQubit, Complex alpha, Complex beta) 
controlledCompactUnitary function    116 ../CPU/QuEST_env_local.c void controlledCompactUnitary(MultiQubit multiQubit, const int controlQubit, const int targetQubit, Complex alpha, Complex beta) 
controlledNot    function    175 ../CPU/QuEST_env_local.c void controlledNot(MultiQubit multiQubit, const int controlQubit, const int targetQubit) 
controlledUnitary function    127 ../CPU/QuEST_env_local.c void controlledUnitary(MultiQubit multiQubit, const int controlQubit, const int targetQubit, ComplexMatrix2 u) 
exitWithError    function    232 ../CPU/QuEST_env_local.c void exitWithError(int errorCode, const char* func){
findProbabilityOfOutcome function    183 ../CPU/QuEST_env_local.c REAL findProbabilityOfOutcome(MultiQubit multiQubit, const int measureQubit, int outcome)
getImagAmpEl     function     94 ../CPU/QuEST_env_local.c REAL getImagAmpEl(MultiQubit multiQubit, long long int index){
getRealAmpEl     function     90 ../CPU/QuEST_env_local.c REAL getRealAmpEl(MultiQubit multiQubit, long long int index){
hadamard         function    169 ../CPU/QuEST_env_local.c void hadamard(MultiQubit multiQubit, const int targetQubit) 
initQuESTEnv     function     23 ../CPU/QuEST_env_local.c void initQuESTEnv(QuESTEnv *env){
measure          function    203 ../CPU/QuEST_env_local.c int measure(MultiQubit multiQubit, int measureQubit){
measureWithStats function    209 ../CPU/QuEST_env_local.c int measureWithStats(MultiQubit multiQubit, int measureQubit, REAL *stateProb){
multiControlledUnitary function    137 ../CPU/QuEST_env_local.c void multiControlledUnitary(MultiQubit multiQubit, int* controlQubits, const int numControlQubits, const int targetQubit, ComplexMatrix2 u) 
phaseGate        function    163 ../CPU/QuEST_env_local.c void phaseGate(MultiQubit multiQubit, const int targetQubit, enum phaseGateType type)
reportNodeList   function     56 ../CPU/QuEST_env_local.c void reportNodeList(QuESTEnv env){
reportQuESTEnv   function     43 ../CPU/QuEST_env_local.c void reportQuESTEnv(QuESTEnv env){
sigmaX           function    151 ../CPU/QuEST_env_local.c void sigmaX(MultiQubit multiQubit, const int targetQubit) 
sigmaY           function    157 ../CPU/QuEST_env_local.c void sigmaY(MultiQubit multiQubit, const int targetQubit) 
syncQuESTEnv     function     31 ../CPU/QuEST_env_local.c void syncQuESTEnv(QuESTEnv env){
syncQuESTSuccess function     35 ../CPU/QuEST_env_local.c int syncQuESTSuccess(int successCode){
unitary          function    107 ../CPU/QuEST_env_local.c void unitary(MultiQubit multiQubit, const int targetQubit, ComplexMatrix2 u) 
